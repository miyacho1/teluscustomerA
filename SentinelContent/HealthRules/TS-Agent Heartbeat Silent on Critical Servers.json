{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/35fcd921-da67-4fe9-849d-0d251e8118d0')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/35fcd921-da67-4fe9-849d-0d251e8118d0')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2022-11-01-preview",
            "properties": {
                "displayName": "TS-Agent Heartbeat Silent on Critical Servers",
                "description": "This rule detects when Windows/ Linux Agent Heartbeat on Critical Servers are silent more than 30 minutes during last 24 hours",
                "severity": "High",
                "enabled": true,
                "query": "// Enter a reference list of hostnames for your DC servers\nlet DCServersList = (_GetWatchlist('BDODataCenterDCs')\n    | extend Computer = tolower(HostName))\n    | project Computer;\n// Enter a reference list of hostnames for your linux devices\nlet LinuxDeviceList = (_GetWatchlist('BDO_Linux_Devices')\n    | extend Computer = tolower(HostName))\n    | project Computer;\n// Joined list\nlet Hosts = union DCServersList, LinuxDeviceList;\n//Heartbeat data\nlet Heartbeats = Heartbeat\n| where TimeGenerated >= ago(30d) //Set lookback period\n// Remove domain and change to lower case\n| extend Computer = split(tolower(Computer), \".\")[0]\n| where Computer in (Hosts)\n| summarize LastHeartbeat=arg_max(TimeGenerated, *) by tostring(Computer)\n//Set offline criteria\n| extend Alive = case (LastHeartbeat >= now(-30m), 'Yes', 'No')\n//Calculate minutes since last heartbeat \n| extend MinutesSilent = datetime_diff('minute', now(), LastHeartbeat);\nHosts\n| join kind=leftouter (Heartbeats) on Computer\n| project\n    Computer,\n    ComputerIP,\n    LastHeartbeat,\n    MinutesSilent,\n    Alive,\n    OSType,\n    ComputerEnvironment\n| extend \n    ComputerIP = coalesce(ComputerIP, \"Computer heartbeat is outside the search range (30d).\"),\n    LastHeartbeat = coalesce(LastHeartbeat, now(-31d)),\n    MinutesSilent = coalesce(MinutesSilent, 43200),\n    Alive = coalesce(Alive, \"No\"),\n    OSType = coalesce(OSType, \"N/A\"),\n    ComputerEnvironment = coalesce(ComputerEnvironment, \"N/A\")\n| where Alive == 'No'\n| sort by MinutesSilent desc",
                "queryFrequency": "PT15M",
                "queryPeriod": "P1D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [],
                "techniques": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": true,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "P1D",
                        "matchingMethod": "Selected",
                        "groupByEntities": [
                            "Host"
                        ],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "HostName",
                                "columnName": "Computer"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "ComputerIP"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": null
            }
        }
    ]
}
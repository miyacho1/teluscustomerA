name: Deploy Content to wksp-la [5cab2aa9-5cff-4274-bc4d-e821f0b76d54]
# Note: This workflow will deploy everything in the root directory.
# To deploy content only from a specific path (for example SentinelContent):
#   1. Add the target path to the "paths" property like such
#    paths:
#    - 'SentinelContent/**'
#    - '!.github/workflows/**'
#    - '.github/workflows/sentinel-deploy-5cab2aa9-5cff-4274-bc4d-e821f0b76d54.yml'
#   2. Append the path to the directory environment variable below
#       directory: '${{ github.workspace }}/SentinelContent'

on: 
  push:
    branches: [ main ]
    paths:
    #- 'SentinelContent/Sigma/**'
    - 'SentinelContent/AnalyticRules/**'
    - 'SentinelContent/HealthRules/**'
    - 'SentinelContent/ExtractedRules/**'
    - '!.github/workflows/**'  # this filter prevents other workflow changes from triggering this workflow
    - '.github/workflows/sentinel-deploy-5cab2aa9-5cff-4274-bc4d-e821f0b76d54.yml'
    workflow_dispatch: # Allows manual trigger

jobs:
  deploy-content:
    runs-on: windows-latest
    env:
      resourceGroupName: 'wksp-ws-01'
      workspaceName: 'wksp-la'
      workspaceId: 'aeabf35a-b869-42ba-b70c-a638dbea53dc'
      directory: '${{ github.workspace }}/SentinelContent/**'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_5cab2aa95cff4274bc4de821f0b76d54 }}
      contentTypes: 'AnalyticsRule'
      branch: 'main'
      sourceControlId: '5cab2aa9-5cff-4274-bc4d-e821f0b76d54'
      rootDirectory: '${{ github.workspace }}'
      githubAuthToken: ${{ secrets.GITHUB_TOKEN }}
      smartDeployment: 'true'

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_5cab2aa95cff4274bc4de821f0b76d54 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_5cab2aa95cff4274bc4de821f0b76d54 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_5cab2aa95cff4274bc4de821f0b76d54 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/scripts/azure-sentinel-deploy-5cab2aa9-5cff-4274-bc4d-e821f0b76d54.ps1